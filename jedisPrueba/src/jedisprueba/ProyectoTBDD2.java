/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jedisprueba;

import java.awt.event.ItemEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;
import redis.clients.jedis.Jedis;

/**
 *
 * @author euced
 */
public class ProyectoTBDD2 extends javax.swing.JFrame {

    /**
     * Creates new form ProyectoTBDD2
     */
    ArrayList<String> users = new ArrayList();
    ArrayList<String> id = new ArrayList();

    public ProyectoTBDD2() {
        initComponents();
        jb_realizarExamen.setEnabled(false);
        //tf_usuarioL.setText("Admin");
        //pf_contraL.setText("admin1234");
        Jedis jedis = new Jedis("localhost", 6379);
        HashMap<String, String> examen = new HashMap<>();
        examen.put("Nombre", "Administrador");
        examen.put("login", "Admin");
        examen.put("Contrasena", doHashing("admin1234"));

        jedis.hmset("0", examen);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_registrar = new javax.swing.JDialog();
        tf_nameR = new javax.swing.JTextField();
        tf_loginR = new javax.swing.JTextField();
        pf_passR = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jb_registrarR = new javax.swing.JButton();
        jb_regresarR = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        tf_e = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jd_login = new javax.swing.JDialog();
        tf_usuarioL = new javax.swing.JTextField();
        pf_contraL = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jb_loginL = new javax.swing.JButton();
        jb_regresarL = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jd_estudiante = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_hechos = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_noHechos = new javax.swing.JList<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jb_realizarExamen = new javax.swing.JButton();
        jb_salirE = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jd_admin = new javax.swing.JDialog();
        tb_admin = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        tf_idClaseC = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tf_nombreClaseC = new javax.swing.JTextField();
        cb_clasesC = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jb_crearClase = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cb_elegirClase = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jl_cantPreguntas = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tf_idPregunta = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tf_titulo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tf_descripcion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cb_respuesta = new javax.swing.JComboBox<>();
        jb_crearPregunta = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cb_elegirClaseE = new javax.swing.JComboBox<>();
        js_cantPreguntas = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tf_idExamen = new javax.swing.JTextField();
        jb_crearExamen = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        cb_clases = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jl_preguntasM = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jl_examen = new javax.swing.JList<>();
        jLabel31 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jd_examen = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jl_preguntas = new javax.swing.JList<>();
        cb_elegir = new javax.swing.JComboBox<>();
        jb_siguiente = new javax.swing.JButton();
        jb_finalizar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jb_login = new javax.swing.JButton();
        jb_registrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();

        jd_registrar.setUndecorated(true);
        jd_registrar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jd_registrar.getContentPane().add(tf_nameR, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 120, 30));
        jd_registrar.getContentPane().add(tf_loginR, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 120, 30));
        jd_registrar.getContentPane().add(pf_passR, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 130, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre completo");
        jd_registrar.getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Login");
        jd_registrar.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Contraseña");
        jd_registrar.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        jb_registrarR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/create.png"))); // NOI18N
        jb_registrarR.setText("Registrar");
        jb_registrarR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_registrarRMouseClicked(evt);
            }
        });
        jd_registrar.getContentPane().add(jb_registrarR, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 160, -1));

        jb_regresarR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/return (6).png"))); // NOI18N
        jb_regresarR.setText("Regresar");
        jb_regresarR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_regresarRMouseClicked(evt);
            }
        });
        jd_registrar.getContentPane().add(jb_regresarR, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Id");
        jd_registrar.getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 30, 20));

        tf_e.setEditable(false);
        jd_registrar.getContentPane().add(tf_e, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 120, 30));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/1920x1080-lemon-yellow-solid-color-background.jpg"))); // NOI18N
        jd_registrar.getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 470));

        jd_login.setUndecorated(true);
        jd_login.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jd_login.getContentPane().add(tf_usuarioL, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 140, 30));
        jd_login.getContentPane().add(pf_contraL, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 140, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Nombre de Usuario");
        jd_login.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Contraseña");
        jd_login.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, 20));

        jb_loginL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/create.png"))); // NOI18N
        jb_loginL.setText("Ingresar");
        jb_loginL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_loginLMouseClicked(evt);
            }
        });
        jd_login.getContentPane().add(jb_loginL, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 130, 50));

        jb_regresarL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/flecha-izquierda.png"))); // NOI18N
        jb_regresarL.setText("Regresar");
        jb_regresarL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_regresarLMouseClicked(evt);
            }
        });
        jd_login.getContentPane().add(jb_regresarL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 130, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/a.jpg"))); // NOI18N
        jd_login.getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 470));

        jd_estudiante.setUndecorated(true);
        jd_estudiante.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_hechos.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(jl_hechos);

        jd_estudiante.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 270, 180));

        jl_noHechos.setModel(new DefaultListModel());
        jl_noHechos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_noHechosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jl_noHechos);

        jd_estudiante.getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 310, 180));

        jLabel18.setText("Examenes hechos");
        jd_estudiante.getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        jLabel19.setText("Examenes por realizar");
        jd_estudiante.getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, -1, -1));

        jLabel6.setText("Seleccione uno");
        jd_estudiante.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, -1, -1));

        jb_realizarExamen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/lapiz.png"))); // NOI18N
        jb_realizarExamen.setText("Realizar Examen");
        jb_realizarExamen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_realizarExamenMouseClicked(evt);
            }
        });
        jd_estudiante.getContentPane().add(jb_realizarExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 320, -1, -1));

        jb_salirE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/return (6).png"))); // NOI18N
        jb_salirE.setText("Salir");
        jb_salirE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_salirEMouseClicked(evt);
            }
        });
        jd_estudiante.getContentPane().add(jb_salirE, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, 40));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/2560x1600-neon-carrot-solid-color-background.jpg"))); // NOI18N
        jd_estudiante.getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 370));

        jd_admin.setUndecorated(true);
        jd_admin.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb_admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_adminMouseClicked(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_idClaseC.setEditable(false);
        jPanel2.add(tf_idClaseC, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 110, 30));

        jLabel7.setText("IdClase");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, -1, -1));

        jLabel9.setText("Nombre Clase");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));
        jPanel2.add(tf_nombreClaseC, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 110, 30));

        cb_clasesC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        jPanel2.add(cb_clasesC, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 180, 30));

        jLabel10.setText("Clases Creadas");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, -1));

        jb_crearClase.setText("Crear Clase");
        jb_crearClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearClaseMouseClicked(evt);
            }
        });
        jPanel2.add(jb_crearClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, -1, 30));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/dc99dfb203f71314fb75a8fe2beca7fe.jpg"))); // NOI18N
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 380));

        tb_admin.addTab("Crear Clase", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Elija una clase");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        cb_elegirClase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clases Creadas" }));
        cb_elegirClase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_elegirClaseItemStateChanged(evt);
            }
        });
        jPanel3.add(cb_elegirClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 180, 40));

        jLabel11.setText("Cantidad de preguntas que tiene esta clase");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jl_cantPreguntas.setText("#");
        jPanel3.add(jl_cantPreguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 170, 40));

        jLabel13.setText("Id de Pregunta");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 40, -1, -1));

        tf_idPregunta.setEditable(false);
        jPanel3.add(tf_idPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 110, 30));

        jLabel14.setText("Titulo");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, -1, -1));
        jPanel3.add(tf_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 170, 40));

        jLabel15.setText("Descripcion");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, -1, -1));
        jPanel3.add(tf_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 170, 40));

        jLabel16.setText("Respuesta");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, -1, -1));

        cb_respuesta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verdadero", "Falso" }));
        jPanel3.add(cb_respuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, 120, 30));

        jb_crearPregunta.setText("Crear Pregunta");
        jb_crearPregunta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearPreguntaMouseClicked(evt);
            }
        });
        jPanel3.add(jb_crearPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 130, 30));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/1920x1080-fresh-air-solid-color-background.jpg"))); // NOI18N
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 380));

        tb_admin.addTab("Crear Pregunta", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cb_elegirClaseE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clases Creadas" }));
        cb_elegirClaseE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_elegirClaseEItemStateChanged(evt);
            }
        });
        jPanel4.add(cb_elegirClaseE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 180, 40));

        js_cantPreguntas.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel4.add(js_cantPreguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 70, 30));

        jLabel12.setText("Cantidad de Preguntas");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 30));

        jLabel17.setText("Id Examen");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        tf_idExamen.setEditable(false);
        jPanel4.add(tf_idExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 130, 30));

        jb_crearExamen.setText("Crear Examen");
        jb_crearExamen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearExamenMouseClicked(evt);
            }
        });
        jPanel4.add(jb_crearExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 110, 30));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/1920x1080-lemon-yellow-solid-color-background.jpg"))); // NOI18N
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 380));

        tb_admin.addTab("Crear Examen", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setText("Elija una clase");
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        cb_clases.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_clasesItemStateChanged(evt);
            }
        });
        jPanel5.add(cb_clases, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 240, 30));

        jl_preguntasM.setModel(new DefaultListModel());
        jScrollPane4.setViewportView(jl_preguntasM);

        jPanel5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 170, 150));

        jLabel21.setText("Preguntas Creadas");
        jPanel5.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        jl_examen.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(jl_examen);

        jPanel5.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 240, 140));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/2560x1600-neon-carrot-solid-color-background.jpg"))); // NOI18N
        jPanel5.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 380));

        tb_admin.addTab("Mostrar todo", jPanel5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );

        tb_admin.addTab("Salir", jPanel6);

        jd_admin.getContentPane().add(tb_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        jd_examen.setUndecorated(true);
        jd_examen.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_preguntas.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(jl_preguntas);

        jd_examen.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 450, 150));

        cb_elegir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verdadero", "Falso" }));
        jd_examen.getContentPane().add(cb_elegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 120, 30));

        jb_siguiente.setText("Siguiente pregunta");
        jb_siguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_siguienteMouseClicked(evt);
            }
        });
        jd_examen.getContentPane().add(jb_siguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, 140, 30));

        jb_finalizar.setText("Finalizar Examen");
        jb_finalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_finalizarMouseClicked(evt);
            }
        });
        jd_examen.getContentPane().add(jb_finalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 140, 40));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/3840x2160-cream-solid-color-background.jpg"))); // NOI18N
        jd_examen.getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 430));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_login.setText("Login");
        jb_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_loginMouseClicked(evt);
            }
        });
        jPanel1.add(jb_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 120, 40));

        jb_registrar.setText("Registrate");
        jb_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_registrarMouseClicked(evt);
            }
        });
        jPanel1.add(jb_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 130, 40));

        jButton1.setText("Salir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 90, 30));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jedisprueba/main/resources/images/1920x1080-fresh-air-solid-color-background.jpg"))); // NOI18N
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_registrarMouseClicked
        // TODO add your handling code here:
        Jedis jedis = new Jedis("localhost", 6379);

        Set<String> names = jedis.keys("*");
        java.util.Iterator<String> it = names.iterator();
        String s = "";

        int cont = 1000;
        while (it.hasNext()) {
            s = it.next();

            if (Integer.parseInt(s) >= 101 && Integer.parseInt(s) <= 1000) {
                cont--;
            }

        }
        tf_e.setText(cont + "");
        jd_registrar.pack();
        jd_registrar.setLocationRelativeTo(null);
        jd_registrar.setVisible(true);
    }//GEN-LAST:event_jb_registrarMouseClicked

    private void jb_regresarRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_regresarRMouseClicked
        // TODO add your handling code here:
        jd_registrar.setVisible(false);
    }//GEN-LAST:event_jb_regresarRMouseClicked

    private void jb_registrarRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_registrarRMouseClicked
        // TODO add your handling code here:

        if (tf_nameR.getText().isEmpty() || tf_loginR.getText().isEmpty() || pf_passR.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {
            Jedis jedis = new Jedis("localhost", 6379);
            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            boolean validar = false;
            String s = "";
            int pos = 1000;

            while (it.hasNext()) {
                s = it.next();

                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);

                if (Integer.parseInt(s) >= 101 && Integer.parseInt(s) <= 1000) {
                    pos--;
                    if (val.get("login").equals(tf_loginR.getText())) {
                        validar = true;
                        break;
                    }
                }

            }

            if (validar == true) {
                JOptionPane.showMessageDialog(null, "Ya existe un usuario con ese login");
            } else {
                int idE = pos;
                String tide = idE + "";

                HashMap<String, String> examen = new HashMap<>();
                examen.put("Nombre", tf_nameR.getText());
                examen.put("login", tf_loginR.getText());
                examen.put("Contrasena", doHashing(pf_passR.getText()));

                jedis.hmset(tide, examen);

                JOptionPane.showMessageDialog(null, "Estudiante creado con exito");
                tf_nameR.setText("");
                tf_loginR.setText("");
                pf_passR.setText("");
            }

            Set<String> name = jedis.keys("*");
            java.util.Iterator<String> it2 = name.iterator();
            String se = "";

            int cont = 1000;
            while (it2.hasNext()) {
                se = it2.next();

                if (Integer.parseInt(se) >= 101 && Integer.parseInt(se) <= 1000) {
                    cont--;
                }

            }
            tf_e.setText(cont + "");

        }
    }//GEN-LAST:event_jb_registrarRMouseClicked

    private void jb_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_loginMouseClicked
        // TODO add your handling code here:
        jd_login.pack();
        jd_login.setLocationRelativeTo(null);
        jd_login.setVisible(true);
    }//GEN-LAST:event_jb_loginMouseClicked

    private void jb_regresarLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_regresarLMouseClicked
        // TODO add your handling code here:
        jd_login.setVisible(false);
    }//GEN-LAST:event_jb_regresarLMouseClicked

    private void jb_loginLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_loginLMouseClicked
        // TODO add your handling code here:
        tb_admin.setSelectedIndex(0);
        cb_clasesC.setModel(new DefaultComboBoxModel());
        cb_elegirClase.setModel(new DefaultComboBoxModel());
        cb_elegirClaseE.setModel(new DefaultComboBoxModel());
        cb_clases.setModel(new DefaultComboBoxModel());

        boolean validar = false;
        boolean validarAdmin = false;
        int contClases = 1;
        if (tf_usuarioL.getText().isEmpty() || pf_contraL.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {

            Jedis jedis = new Jedis("localhost", 6379);

            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            String s = "";
            int pos = 1001;

            while (it.hasNext()) {
                s = it.next();

                if ((Integer.parseInt(s) >= 101 && Integer.parseInt(s) <= 1000) || Integer.parseInt(s) == 0) {
                    pos--;

                    //if (todo.get(igual).equals(tf_loginR.getText())) {
                    HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                    if ((val.get("login").equals(tf_usuarioL.getText()) && val.get("Contrasena").equals(doHashing(pf_contraL.getText()))) && tf_usuarioL.getText().equals("Admin")) {
                        validarAdmin = true;
                    }
                    //if (val.get("login").equals(tf_usuarioL.getText()) && val.get("Contrasena").equals(pf_contraL.getText())) {
                    if (val.get("login").equals(tf_usuarioL.getText()) && val.get("Contrasena").equals(doHashing(pf_contraL.getText()))) {
                        IdEstudiante = Integer.parseInt(s);
                        validar = true;

                    }
                } else if (Integer.parseInt(s) >= 1 && Integer.parseInt(s) <= 100) {
                    cb_clasesC.addItem("ID: " + s + " : " + jedis.hgetAll(s));
                    cb_elegirClase.addItem("ID: " + s + " : " + jedis.hgetAll(s));
                    cb_elegirClaseE.addItem("ID: " + s + " : " + jedis.hgetAll(s));
                    cb_clases.addItem("ID: " + s + " : " + jedis.hgetAll(s));
                    contClases++;
                }

            }

            if (validar == true && !validarAdmin == true) {

                jd_login.setVisible(false);
                llenarLists();
                jd_estudiante.pack();
                jd_estudiante.setLocationRelativeTo(null);
                jd_estudiante.setVisible(true);
            } else if (validarAdmin == true && validar == true) {

                tf_idClaseC.setText(contClases + "");
                jd_login.setVisible(false);
                jd_admin.pack();
                jd_admin.setLocationRelativeTo(null);
                jd_admin.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Usuario o contraseña incorrecta");
            }
            tf_usuarioL.setText("");
            pf_contraL.setText("");
        }
    }//GEN-LAST:event_jb_loginLMouseClicked

    private void jb_crearClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearClaseMouseClicked
        // TODO add your handling code here:
        if (tf_nombreClaseC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {
            Jedis jedis = new Jedis("localhost", 6379);

            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            boolean validar = false;
            String s = "";
            int cuenta = 1;
            while (it.hasNext()) {
                s = it.next();
                List<String> todo = jedis.hvals(s);

                if (Integer.parseInt(s) >= 1 && Integer.parseInt(s) <= 100) {
                    cuenta++;
                    if (todo.get(0).equals(tf_nombreClaseC.getText())) {
                        validar = true;
                        break;
                    }
                }

            }

            if (validar) {
                JOptionPane.showMessageDialog(null, "Ya existe una clase con ese nombre");
            } else {
                HashMap<String, String> examen = new HashMap<>();
                examen.put("NombreClase", tf_nombreClaseC.getText());

                jedis.hmset(cuenta + "", examen);
                cb_clasesC.addItem("ID: " + cuenta + " : " + examen);
                cb_elegirClase.addItem("ID: " + cuenta + " : " + examen);
                cb_elegirClaseE.addItem("ID: " + cuenta + " : " + examen);
                cb_clases.addItem("ID: " + cuenta + " : " + examen);

                JOptionPane.showMessageDialog(null, "Clase creada con exito");

                int count = cb_clasesC.getItemCount() + 1;
                tf_idClaseC.setText(count + "");
            }
            tf_nombreClaseC.setText("");
        }

    }//GEN-LAST:event_jb_crearClaseMouseClicked

    private void jb_crearPreguntaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearPreguntaMouseClicked
        // TODO add your handling code here:

        if (tf_titulo.getText().isEmpty() || tf_descripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {
            Jedis jedis = new Jedis("localhost", 6379);

            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            String s = "";
            int cuenta = 2001;
            while (it.hasNext()) {
                s = it.next();
                if (Integer.parseInt(s) >= 2001) {
                    cuenta++;
                }
            }
            boolean respuesta = true;
            if (cb_respuesta.getSelectedIndex() == 0) {
                respuesta = true;
            } else if (cb_respuesta.getSelectedIndex() == 1) {
                respuesta = false;
            }

            HashMap<String, String> examen = new HashMap<>();
            examen.put("titulo", tf_titulo.getText());
            examen.put("descripcion", tf_descripcion.getText());
            examen.put("IdClase", ((String) cb_elegirClase.getSelectedItem()).charAt(4) + "");
            examen.put("respuesta", respuesta + "");
            jedis.hmset(cuenta + "", examen);
            JOptionPane.showMessageDialog(null, "Pregunta creada con exito");

            tf_titulo.setText("");
            tf_descripcion.setText("");
            cb_elegirClase.setSelectedIndex(0);
            cb_respuesta.setSelectedIndex(0);
            contClases++;
            tf_idPregunta.setText(contClases + "");

            Set<String> name = jedis.keys("*");
            java.util.Iterator<String> it2 = name.iterator();
            String s2 = "";
            int cuenta2 = 0;
            while (it2.hasNext()) {
                s2 = it2.next();

                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s2);

                if (Integer.parseInt(s2) >= 2001) {
                    if (val.get("IdClase").charAt(0) == ((String) cb_elegirClase.getSelectedItem()).charAt(4)) {
                        cuenta2++;
                    }
                }

            }
            jl_cantPreguntas.setText(cuenta2 + "");

        }
    }//GEN-LAST:event_jb_crearPreguntaMouseClicked

    private void cb_elegirClaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_elegirClaseItemStateChanged
        // TODO add your handling code here:
        Jedis jedis = new Jedis("localhost", 6379);

        Set<String> names = jedis.keys("*");
        java.util.Iterator<String> it = names.iterator();
        String s = "";
        int cuenta = 0;

        while (it.hasNext()) {
            s = it.next();

            HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);

            if (Integer.parseInt(s) >= 2001) {
                if (val.get("IdClase").charAt(0) == ((String) cb_elegirClase.getSelectedItem()).charAt(4)) {
                    cuenta++;
                }
            }

        }
        jl_cantPreguntas.setText(cuenta + "");
    }//GEN-LAST:event_cb_elegirClaseItemStateChanged
    int contClases = 2001;
    private void tb_adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_adminMouseClicked
        // TODO add your handling code here:

        if (tb_admin.getSelectedIndex() == 4) {
            jd_admin.setVisible(false);
        } else if (cb_elegirClaseE.getItemCount() != 0) {
            Jedis jedis = new Jedis("localhost", 6379);

            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            String s = "";
            contClases = 2001;
            int contExamen = 1001;

            while (it.hasNext()) {
                s = it.next();

                if (Integer.parseInt(s) >= 2001) {
                    contClases++;

                } else if (Integer.parseInt(s) >= 1001 && Integer.parseInt(s) <= 2000) {
                    contExamen++;

                }
            }
            cb_elegirClaseE.addItem("hola");
//        cb_clases.addItem("hola");
            cb_elegirClaseE.setSelectedIndex(1);
//        cb_clases.setSelectedIndex(1);
            llenarCB();
            tf_idPregunta.setText(contClases + "");
            tf_idExamen.setText(contExamen + "");
        }
    }//GEN-LAST:event_tb_adminMouseClicked

    private void cb_elegirClaseEItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_elegirClaseEItemStateChanged
        // TODO add your handling code here:
        //tf_idExamen

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                if (tb_admin.getSelectedIndex() == 2) {
                    SpinnerNumberModel modelo = (SpinnerNumberModel) js_cantPreguntas.getModel();
                    modelo.setValue(1);
                    js_cantPreguntas.setModel(modelo);
                    Jedis jedis = new Jedis("localhost", 6379);

                    Set<String> names = jedis.keys("*");
                    java.util.Iterator<String> it = names.iterator();
                    String s = "";
                    int cont = 0;

                    while (it.hasNext()) {
                        s = it.next();

                        HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                        if (Integer.parseInt(s) >= 2001) {
                            if (val.get("IdClase").charAt(0) == ((String) cb_elegirClaseE.getSelectedItem()).charAt(4)) {
                                cont++;

                            }

                        } else if (Integer.parseInt(s) >= 1001 && Integer.parseInt(s) <= 2000) {
                            if (val.get("IdClase").charAt(0) == ((String) cb_elegirClaseE.getSelectedItem()).charAt(4)) {
                                JOptionPane.showMessageDialog(null, "Esa clase ya tiene examen");
                                jb_crearExamen.setEnabled(false);
                                cont = -1;
                                break;

                            }
                        }
                    }
                    if (cont == 0) {
                        JOptionPane.showMessageDialog(null, "Esa clase no tiene preguntas creadas");
                        jb_crearExamen.setEnabled(false);
                    } else if (cont > 0) {
                        SpinnerNumberModel model = (SpinnerNumberModel) js_cantPreguntas.getModel();
                        model.setMaximum(cont);
                        js_cantPreguntas = new JSpinner(model);
                        jb_crearExamen.setEnabled(true);

                    }
                }
            }
        });


    }//GEN-LAST:event_cb_elegirClaseEItemStateChanged

    private void jb_crearExamenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearExamenMouseClicked
        // TODO add your handling code here:
        Jedis jedis = new Jedis("localhost", 6379);

        HashMap<String, String> examen = new HashMap<>();
        examen.put("IdClase", ((String) cb_elegirClaseE.getSelectedItem()).charAt(4) + "");
        examen.put("cantPreguntas", (int) js_cantPreguntas.getValue() + "");
        jedis.hmset(tf_idExamen.getText() + "", examen);
        jb_crearExamen.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Examen creado con exito");
    }//GEN-LAST:event_jb_crearExamenMouseClicked

    private void jl_noHechosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_noHechosMouseClicked
        // TODO add your handling code here:
        jb_realizarExamen.setEnabled(true);
    }//GEN-LAST:event_jl_noHechosMouseClicked

    private void jb_realizarExamenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_realizarExamenMouseClicked
        // TODO add your handling code here:
        if (jl_noHechos.getSelectedIndex() != -1) {

            jl_preguntas.setModel(new DefaultListModel<>());

            jb_finalizar.setEnabled(true);
            jb_siguiente.setEnabled(true);
            int cont = 1;
            int index = jl_noHechos.getSelectedIndex();
            DefaultListModel<String> modelo = (DefaultListModel<String>) jl_noHechos.getModel();

            preguntasH = new ArrayList();
            respuestas = new ArrayList();
            respondidas = new ArrayList();

            String cadenaClase = modelo.getElementAt(index);
            String IdExamen = cadenaClase.substring(11, 15);
            IdeExamen = IdExamen;
            String IdClase = cadenaClase.charAt(27) + "";

            Jedis jedis = new Jedis("localhost", 6379);

            int cantP = Integer.parseInt(jedis.hget(IdExamen, "cantPreguntas"));
            Set<String> names = jedis.keys("*");
            java.util.Iterator<String> it = names.iterator();
            String s = "";

            while (it.hasNext() && cont <= cantP) {
                s = it.next();

                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                if (Integer.parseInt(s) >= 2001) {

                    if (val.get("IdClase").equals(IdClase)) {
                        preguntasH.add(val.get("titulo") + " - " + val.get("descripcion"));
                        respuestas.add(val.get("respuesta"));
                        cont++;
                    }
                }

            }

            DefaultListModel<String> model = (DefaultListModel<String>) jl_preguntas.getModel();
            model.addElement(preguntasH.get(0));
            jl_preguntas.setModel(model);

            if (preguntasH.size() > 1) {
                jb_finalizar.setEnabled(false);
            } else if (preguntasH.size() == 1) {
                jb_siguiente.setEnabled(false);
            }

            jd_examen.pack();
            jd_examen.setLocationRelativeTo(null);
            jd_examen.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "No ha seleccionado examenes");
        }
    }//GEN-LAST:event_jb_realizarExamenMouseClicked

    private void jb_siguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_siguienteMouseClicked
        // TODO add your handling code here:
        String r = "";
        for (int i = 1; i < preguntasH.size(); i++) {
            r = (String) cb_elegir.getSelectedItem();
            if (r.equals("Verdadero")) {
                respondidas.add("true");
            } else {
                respondidas.add("false");
            }

            DefaultListModel<String> model = new DefaultListModel<>();
            model.addElement(preguntasH.get(i));
            jl_preguntas.setModel(model);

            if (i == preguntasH.size() - 1) {
                jb_siguiente.setEnabled(false);
                jb_finalizar.setEnabled(true);
            }

        }
    }//GEN-LAST:event_jb_siguienteMouseClicked

    private void jb_finalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_finalizarMouseClicked
        // TODO add your handling code here:
        String r = (String) cb_elegir.getSelectedItem();
        if (r.equals("Verdadero")) {
            respondidas.add("true");
        } else {
            respondidas.add("false");
        }

        int nota = 0;
        for (int i = 0; i < respondidas.size(); i++) {
            if (respondidas.get(i).equals(respuestas.get(i))) {
                nota += 5;
            }
        }
        JOptionPane.showMessageDialog(null, "Su nota es de: " + nota);
        examenesPorHacer--;
        Jedis jedis = new Jedis("localhost", 6379);
        int n = 2;
        if (!jedis.hexists(IdEstudiante + "", "Resultado")) {
            HashMap<String, String> examen = new HashMap<>();
            examen.put("Resultado", IdeExamen + "-" + nota);
            jedis.hmset(IdEstudiante + "", examen);
        } else {

            while (true) {
                if (!jedis.hexists(IdEstudiante + "", "Resultado" + n)) {
                    break;
                }
                n++;
            }
            HashMap<String, String> examen = new HashMap<>();
            examen.put("Resultado" + n, IdeExamen + "-" + nota);
            jedis.hmset(IdEstudiante + "", examen);

        }

        llenarLists();
        if (examenesPorHacer == 0) {
            jb_realizarExamen.setEnabled(false);
        }
        jd_examen.setVisible(false);
    }//GEN-LAST:event_jb_finalizarMouseClicked

    private void cb_clasesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_clasesItemStateChanged
        // TODO add your handling code here:
        jl_examen.setModel(new DefaultListModel<>());

        jl_preguntasM.setModel(new DefaultListModel<>());
        Jedis jedis = new Jedis("localhost", 6379);

        Set<String> names = jedis.keys("*");
        java.util.Iterator<String> it = names.iterator();
        String s = "";

        DefaultListModel<String> modelo = (DefaultListModel<String>) jl_preguntasM.getModel();
        while (it.hasNext()) {
            s = it.next();

            if (Integer.parseInt(s) >= 2001) {
                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                if ((((String) cb_clases.getSelectedItem()).charAt(4) + "").equals(val.get("IdClase"))) {
                    String listaP = "Id Pregunta: " + s + " - Titulo: " + val.get("titulo") + " - Descripcion: " + val.get("descripcion") + " - IdClase: " + val.get("IdClase") + " - respuesta: " + val.get("respuesta");
                    modelo.addElement(listaP);
                }

            }

            DefaultListModel<String> model = (DefaultListModel<String>) jl_examen.getModel();
            if (Integer.parseInt(s) >= 1001 && Integer.parseInt(s) <= 2000) {
                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                if ((((String) cb_clases.getSelectedItem()).charAt(4) + "").equals(val.get("IdClase"))) {

                    String listaE = "Id Examen: " + s + " - IdClase: " + val.get("IdClase") + " - Nombre de Clase: " + jedis.hget(val.get("IdClase"), "NombreClase");
                    model.addElement(listaE);
                }
            }

            jl_examen.setModel(model);

            jl_preguntasM.setModel(modelo);

        }
    }//GEN-LAST:event_cb_clasesItemStateChanged

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jb_salirEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_salirEMouseClicked
        // TODO add your handling code here:
        jd_estudiante.setVisible(false);
    }//GEN-LAST:event_jb_salirEMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoTBDD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoTBDD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoTBDD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoTBDD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProyectoTBDD2().setVisible(true);
            }
        });
    }

    public void subirBase(int idE, String cadena) {
        Jedis jedis = new Jedis("localhost", 6379);
        jedis.set("" + idE, cadena);
    }

    public void llenarCB() {
        cb_elegirClaseE.setModel(new DefaultComboBoxModel());
        cb_clases.setModel(new DefaultComboBoxModel());
        Jedis jedis = new Jedis("localhost", 6379);

        Set<String> names = jedis.keys("*");
        java.util.Iterator<String> it = names.iterator();
        String s = "";

        while (it.hasNext()) {
            s = it.next();
            if (Integer.parseInt(s) >= 1 && Integer.parseInt(s) <= 100) {

                cb_elegirClaseE.addItem("ID: " + s + " : " + jedis.hgetAll(s));
                cb_clases.addItem("ID: " + s + " : " + jedis.hgetAll(s));
            }

        }
    }

    public static String doHashing(String password) {
        try {
            MessageDigest messageDigest = MessageDigest.getInstance("md5");

            messageDigest.update(password.getBytes());

            byte[] resultByteArray = messageDigest.digest();

            StringBuilder sb = new StringBuilder();

            for (byte b : resultByteArray) {
                sb.append(String.format("%02x", b));
            }

            return sb.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        return "";
    }

    public void llenarLists() {
        jl_hechos.setModel(new DefaultListModel<>());
        jl_noHechos.setModel(new DefaultListModel<>());
        Jedis jedis = new Jedis("localhost", 6379);
        ArrayList<String> examenHecho = new ArrayList();
        Set<String> names = jedis.keys("*");
        java.util.Iterator<String> it = names.iterator();
        String s = "";
        String listasExamenes = "";
        String listasExamenesN = "";

        DefaultListModel<String> model = (DefaultListModel<String>) jl_hechos.getModel();
        while (it.hasNext()) {
            s = it.next();

            if (Integer.parseInt(s) == IdEstudiante) {
                HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
                if (jedis.hexists(s, "Resultado")) {
                    for (int i = 0; i < val.size(); i++) {

                        if (((String) val.keySet().toArray()[i]).contains("Resultado")) {
                            String grupo = (String) val.values().toArray()[i];
                            String[] separados = grupo.split("-");
                            listasExamenes = "IdExamen: " + separados[0] + " - Nota: " + separados[1];
                            model.addElement(listasExamenes);
                            examenHecho.add(separados[0]);
                        }
                    }

                }
            }

        }

        Set<String> names2 = jedis.keys("*");
        java.util.Iterator<String> it2 = names2.iterator();
        DefaultListModel<String> modelo = (DefaultListModel<String>) jl_noHechos.getModel();
        while (it2.hasNext()) {
            s = it2.next();
            HashMap<String, String> val = (HashMap<String, String>) jedis.hgetAll(s);
            if (Integer.parseInt(s) >= 1001 && Integer.parseInt(s) <= 2000) {
                boolean validar = true;
                for (int i = 0; i < examenHecho.size(); i++) {
                    if (examenHecho.get(i).equals(s)) {
                        validar = false;
                    }
                }

                if (validar) {
                    listasExamenesN = "Id Examen: " + s + " - IdClase: " + val.get("IdClase") + " - Nombre de Clase: " + jedis.hget(val.get("IdClase"), "NombreClase");
                    modelo.addElement(listasExamenesN);
                    examenesPorHacer++;
                }

            }

        }

        jl_hechos.setModel(model);

        jl_noHechos.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_clases;
    private javax.swing.JComboBox<String> cb_clasesC;
    private javax.swing.JComboBox<String> cb_elegir;
    private javax.swing.JComboBox<String> cb_elegirClase;
    private javax.swing.JComboBox<String> cb_elegirClaseE;
    private javax.swing.JComboBox<String> cb_respuesta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton jb_crearClase;
    private javax.swing.JButton jb_crearExamen;
    private javax.swing.JButton jb_crearPregunta;
    private javax.swing.JButton jb_finalizar;
    private javax.swing.JButton jb_login;
    private javax.swing.JButton jb_loginL;
    private javax.swing.JButton jb_realizarExamen;
    private javax.swing.JButton jb_registrar;
    private javax.swing.JButton jb_registrarR;
    private javax.swing.JButton jb_regresarL;
    private javax.swing.JButton jb_regresarR;
    private javax.swing.JButton jb_salirE;
    private javax.swing.JButton jb_siguiente;
    private javax.swing.JDialog jd_admin;
    private javax.swing.JDialog jd_estudiante;
    private javax.swing.JDialog jd_examen;
    private javax.swing.JDialog jd_login;
    private javax.swing.JDialog jd_registrar;
    private javax.swing.JLabel jl_cantPreguntas;
    private javax.swing.JList<String> jl_examen;
    private javax.swing.JList<String> jl_hechos;
    private javax.swing.JList<String> jl_noHechos;
    private javax.swing.JList<String> jl_preguntas;
    private javax.swing.JList<String> jl_preguntasM;
    private javax.swing.JSpinner js_cantPreguntas;
    private javax.swing.JPasswordField pf_contraL;
    private javax.swing.JPasswordField pf_passR;
    private javax.swing.JTabbedPane tb_admin;
    private javax.swing.JTextField tf_descripcion;
    private javax.swing.JTextField tf_e;
    private javax.swing.JTextField tf_idClaseC;
    private javax.swing.JTextField tf_idExamen;
    private javax.swing.JTextField tf_idPregunta;
    private javax.swing.JTextField tf_loginR;
    private javax.swing.JTextField tf_nameR;
    private javax.swing.JTextField tf_nombreClaseC;
    private javax.swing.JTextField tf_titulo;
    private javax.swing.JTextField tf_usuarioL;
    // End of variables declaration//GEN-END:variables
    int IdEstudiante;
    int examenesPorHacer = 0;
    String IdeExamen;
    ArrayList<String> preguntasH = new ArrayList();
    ArrayList<String> respuestas = new ArrayList();
    ArrayList<String> respondidas = new ArrayList();
}
